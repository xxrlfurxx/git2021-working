 
// 기본 셋업
1. 라이브러리설치: npm install redux-saga
2. redux store파일 (/store/index.ts)에서 saga middleware를 생성
  - const sagaMiddleware = createSagaMiddleware();
3. redux store파일에서 store에 saga middleware를 넣어줌
  - middleware: [sagaMiddleware]
4. rootSaga파일을 생성함(/saga/index.ts)
  - export default function* rootSaga() {}
5. redux store 파일에서 saga middleware를 rootSaga로 run함
  - sagaMiddleware.run(rootSaga)

// 기능별(features)별 saga 셋업
1. 기능별 Saga 파일 만듦(/domain/기능명/기능명Saga.ts)
2. 기능별 saga 파일에 saga action take용도의 generator 함수를 생성
  - export default function* 기능명Saga() {}
3. rootSaga 파일에서 해당 기능의 saga를  fork해야함
  - yield fork (기능명Saga);
4. 기능별 saga파일에 saga action createor를 생성
  - export const saga액션명 = createAction<payload타입>(
    `${reducer.name}/saga액션명`);
5. 기능별 saga파일에 saga action에 대해서 처리할 제네레이터 함수를 작성
  - function* 처리함수명(action: PayloadAction<payload타입>) {}
6. 기능별